# Day 03 {.unnumbered}

```{r}
#| include: false
library(tidyverse)
library(palmerpenguins)
library(gt)
```

Onto the real fun now! Today's lesson covers [Section 2.0 - 2.3](https://nustat.github.io/intro-stat-data-sci/02-visualization.html) and focuses on making scatterplots with `ggplot()`.

::: {.callout-note icon="false"}
## Agenda

\~ 15 min <span class="tab"> Slide deck

\~ 25 min <span class="tab"> Students work on Activity 02

\~ 10 min <span class="tab"> Work through a select problem in detail from the activity as a class
:::

## Slide Deck

::: {.callout-note appearance="simple" icon="false"}
## Today's goals

<br/>

::: {.cols data-latex=""}
::: {.col data-latex="{0.60\textwidth}"}
1.  Create a scatterplot
2.  Properly describe a scatterplot
3.  Change aesthetics such as color and shape in your plot
4.  Solve overplotting issues
:::

::: {.col data-latex="{0.40\textwidth}"}
![](images/images_horst/ggplot2_exploratory.png){height="1in"} <br> <small> Artwork by \@allison_horst </small>
:::
:::
:::

::: {.callout-note appearance="simple" icon="false"}
## The Grammar of Graphics

::: {.cols data-latex=""}
::: {.col data-latex="{0.85\textwidth}"}
Defines a set of rules for constructing statistical graphics by combining different types of **layers**.
:::

::: {.col data-latex="{0.15\textwidth}"}
![](images/images_lecture/grammar_graphics.png){#id .class width="100px" height="100px"}
:::
:::

```{r}
#| echo: false
grammar <- tibble(Layer = c("Data", "Aesthetics", "Geometries", "Facets", "Statistics", "Coordinates", "Theme"),
                  Function =c("ggplot( )", "aes( )", "geom_*( )", "facet_*( )", "stat_*( )", "coord_*( )", "theme( )"), Explanation = c("initialize plot and define dataset first", "how variables are mapped", "how data is conveyed", "separates plots by categories", "statistical transformations", "customize coord system", "customize non-data components"))

grammar %>%
  gt::gt() %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(rows = Layer %in% c("Data", "Aesthetics", "Geometries")
  ) )%>%
  tab_style(
    style = cell_text(color = "blue"),
    locations = cells_body(
      columns = "Function",
      rows = Layer %in% c("Data", "Aesthetics", "Geometries")
  ) ) %>%
  tab_style(
    style = cell_text(color = "gray40"),
    locations = cells_body(rows = !Layer %in% c("Data", "Aesthetics", "Geometries")
  ) )  %>%
  tab_style(
    style = "padding-left:40px;padding-right:40px;",
    locations = cells_body()
  ) %>%
  tab_options(
    table.font.size = 12,
    column_labels.background.color = "lightgray",
    column_labels.font.weight = "bold"
  )
```

Only the *first three* layers are essential components that must be defined when building a graphic.
:::

::: {.callout-note appearance="simple" icon="false"}
## 5NG#1: Scatterplots

Scatterplots allow you to visualize the **relationship** between 2 **numerical** variables.

**Scatterplot syntax in R:**

```{r scatterplot}
#| echo: true
#| eval: false
ggplot(data= my_data, mapping = aes(x = var1, y = var2)) +
  geom_point()

```

**Scatterplot language:** Construct a scatterplot of **Y by X**.
:::

::: {.callout-note appearance="simple" icon="false"}
## 5NG#1: Scatterplots

When describing scatterplots...

-   Look for pattern going from left to right.
-   Classify association as positive, negative, or no association.
-   Classify strength of association: strong, moderate, weak.
-   Describe overall pattern: linear, nonlinear, etc.
-   Check for overplotting issues.
:::

::: {.callout-note appearance="simple" icon="false"}
## The Palmer Penguins Dataset:

```{r}
library(palmerpenguins)
glimpse(penguins)
```

::: {.cols data-latex=""}
::: {.col data-latex="{0.5\textwidth}"}
![](images/images_horst/palmer_penguin_species.png){width="200px" height="150px"}
:::

::: {.col data-latex="{0.5\textwidth}"}
![](images/images_horst/palmer_penguin.png){width="200px" height="150px"}
:::
:::

<small> Artwork by \@allison_horst </small>
:::

::: {.callout-important appearance="minimal"}
::: {.cols data-latex=""}
::: {.col data-latex="{0.90\textwidth}"}
How would you describe the scatterplot?
:::

::: {.col data-latex="{0.10\textwidth}"}
![](images/images_lecture/participate_icon.png){height="0.5in"}
:::
:::

-   Positive "moderately linear".
-   Teaching tip: draw an oval around the points. The thinner the oval the stronger the relationship. An approximate circle means no relationship.
-   Emphasize using the "buzz words" from the previous slide.
-   Some students may have noticed what appears to be three clusters! We will look at clusters in the next example.
:::

::: {.callout-note appearance="simple" icon="false"}
## Example 1: Describing scatterplots

::: panel-tabset
## Plot

```{r}
#| echo: true
#| fig-cap: "Fig A"
ggplot(penguins, aes(x=flipper_length_mm, y=bill_length_mm)) +
  geom_point()
```

## Data

```{r}
glimpse(penguins)
```
:::
:::

::: {.callout-important appearance="minimal"}
::: {.cols data-latex=""}
::: {.col data-latex="{0.90\textwidth}"}
How would you describe the scatterplot?
:::

::: {.col data-latex="{0.10\textwidth}"}
![](images/images_lecture/participate_icon.png){height="0.5in"}
:::
:::

-   Overall negative "weakly linear".
-   Teaching tip: draw an oval around the points.
:::

::: {.callout-important appearance="minimal"}
But the clusters don't appear to be negative... what variable might be causing these two separate clusters?

-   Since there are two your first instinct is probably the variable `sex`
:::

::: {.callout-note appearance="simple" icon="false"}
## Example 2: Describing scatterplots

```{r}
#| eval: false
ggplot(penguins, aes(x=flipper_length_mm, y=bill_depth_mm)) +
  geom_point()
```

```{r}
#| echo: false
ggplot(penguins, aes(x=flipper_length_mm, y=bill_depth_mm)) +
  geom_point() + 
  stat_ellipse(color = "red")
```

:::

::: {.callout-important appearance="minimal"}
But `sex` is not the cause of the clusters. Try another categorical variable that might cause different flipper and bill length.
:::

::: {.callout-note appearance="simple" icon="false"}
## Example 2: Describing scatterplots

::: panel-tabset
## Plot

```{r}
#| fig-cap: "Fig C"
ggplot(penguins, aes(x=flipper_length_mm, y=bill_depth_mm, color = sex)) +
  geom_point()
```

## Data

```{r}
glimpse(penguins)
```
:::
:::

::: {.callout-important appearance="minimal"}
Now describe the scatterplot: Weakly positive linear for Adelie and Chinstrap species. These two species appear to be similar with the center of the grouping having a flipper length around 190 mm and bill depth around 18.5mm. Gentoo also has a positive linear relationship, perhaps more moderate than weak. Gentoo have a longer flipper but shorter bill depth than the other 2 species.
:::

::: {.callout-note appearance="simple" icon="false"}
## Example 2: Describing scatterplots

::: panel-tabset
## Plot

```{r}
#| fig-cap: "Fig D"
ggplot(penguins, aes(x=flipper_length_mm, y=bill_depth_mm, color = species)) +
  geom_point()
```

## Data

```{r}
glimpse(penguins)
```
:::
:::

::: {.callout-note appearance="simple" icon="false"}
## Common Coding Errors

1.

```{r}
#| eval: false
ggplot(penguins, aes(x=flipper_length_mm, y=bill_depth_mm)) +
  geom_point() +
```

![](images/images_lecture/error_2a.png){width="400px" height="75px"}


Plus sign to nowhere. What would happen if you type "1+2+" into a calculator? An error!

2.

```{r}
#| eval: false
ggplot(penguins, aes(x=flipper_length_mm, y=bill_depth_mm) +
  geom_point()
```

![](images/images_lecture/error_2b.png){width="400px" height="75px"}

All parenthesis must me closed!

3.

```{r}
#| eval: false
ggplot(Penguins, aes(x=Flipper_length_mm, y=Bill_depth_mm) +
  geom_point()
```

![](images/images_lecture/error_2c.png){width="400px" height="75px"}

R is case sensitive! Make sure the data and variable names match EXACTLY.
:::

::: {.callout-note appearance="simple" icon="false"}
## Extra information and resources

<br>

-   [ggplot2 cheatsheet link](https://www.rstudio.com/resources/cheatsheets/)

-   Numerical vs Categorical data examples:

![](images/images_lecture/data_types.png){height="2.5in"}
:::

## Activity Solution

Need to add. See RStudio Cloud TA Solutions for now.

## Homework

-   Complete and submit Activity 02

-   Read Sections 2.4 - 2.6 of the book

-   Complete and submit Reading Check 03_ggplot2
