# Day 05 {.unnumbered}

```{r}
#| include: false
library(tidyverse)
library(ISDSdatasets)
library(palmerpenguins)
```

Today's lesson covers [Section 2.7 - 2.9](https://nustat.github.io/intro-stat-ds/2-viz.html#boxplots) and focuses on making boxplots and barplots with `ggplot()`.

## Agenda

::: agenda
\~ 15 min <span class="tab"> Slide deck

\~ 25 min <span class="tab"> Students work on Activity 02

\~ 10 min <span class="tab"> Work through a select problem in detail from the activity as a class
:::

## Slide Deck

::: slide-deck

### Today's goals

<br/>

::: columns
::: {.column width="60%"}
1.  Create a boxplot
2.  Create a barplot
3.  Properly describe a boxplot and barplot
4.  Display barplots in various ways by category
:::


::: {.column width="40%"}
::: {style="opacity:0.75}
![](images/images_horst/r_first_then.png){height="1in"} <br> <small> Artwork by \@allison_horst </small>
:::
:::

:::
:::

::: slide-deck
### 5NG#4: Boxplots

-   A boxplot is used to visualize the **distribution** of a single **numerical** variable.

-   Grouped boxplots are particularly useful for comparing the distribution of a numerical variable across a **categorical** variable. ie: shows the relationship between a numerical and a categorical variable.

**Boxplot syntax in R:**

```{r boxplot}
#| echo: true
#| eval: false
ggplot(data= my_data, aes(x = (optional categorical variable),  y = var1)) +
  geom_boxplot()
```

If you switch x and y, it will just change the orientation of the boxplot (personal preference).
:::

::: slide-deck
### 5NG#4: Boxplots

::: columns
::: {.column width="40%"}
<center>
![](images/images_lecture/box_plot.png){height="2in"}
</center>
:::

::: {.column width="60%"}
There are 3 things that we typically focus on and describe/compare when inspecting a boxplot:

-   center
-   spread
-   shape and outliers
:::
:::
:::


::: activity
::: columns
::: {.column width="90%"}
Is `Survived` a categorical or numerical variable?

- It should be categorical even though it is coded as numerical "dbl"
:::

::: {.column width="10%"}
![](images/images_lecture/participate_icon.png){height="0.5in"}
:::
:::
:::

::: slide-deck
### Binary Variables {.scrollable}

Consider the `titanic` dataset, which contains information about passengers on the titanic. If a passenger survived, then the variable `Survived = 1`.

```{r}
titanic %>% 
  select(PassengerId, Survived, Sex) %>%
  glimpse()
```


Is `Survived` a categorical or numerical variable?


`R` will read in numerical columns as "numbers" even though these numbers are supposed to represent "categories".

To fix this we need to use the `factor()` function.

Typing `factor(Survived)` would turn the variable into a "factor".
:::

::: slide-deck
### 5NG#5: Barplots

A barplot is used to visualize the distribution (frequencies) of a single categorical variable.

-   `geom_bar()` is used when we have the raw data and counting how many observations are in each category has to be done (list not yet counted).


-   `geom_col()` is used when we directly have counts of each category in our dataset (pre-counted).


**Barplot syntax in R:**

```{r barplot}
#| echo: true
#| eval: false
ggplot(data= my_data, aes(x = var1)) +
  geom_bar()
```
:::

::: slide-deck
### 5NG#5: Barplots continued

When describing a barplot we look for...

-   Disparities in the height of the bars.
-   Bar with the most observations.
-   Bar with the least observations.
-   If all the bars are about equal height, then the distribution is uniform.
:::


::: activity
::: columns
::: {.column width="90%"}
Are we using `geom_bar()` or `geom_col()`?

- `geom_bar()`
:::

::: {.column width="10%"}
![](images/images_lecture/participate_icon.png){height="0.5in"}
:::
:::
:::
::: slide-deck
### Example 1: Barplots {.scrollable .smaller}

Consider the Palmer Penguins dataset.

```{r}
library(palmerpenguins)
head(penguins)
```

We are interested in plotting the distribution of `species`.

Are we using `geom_bar()` or `geom_col()`?

<br>

What would pre-counted data look like?

::: panel-tabset
## Data

```{r}
#| include: false
penguins_counted <- penguins %>% 
  count(species)
```

```{r}
penguins_counted
```

## Code

```{r}
penguins_counted <- penguins %>% 
  count(species)
```
:::
:::

::: activity
Teaching note:

- stacked: best if you are interested in overall counts but difficult to visually see if there is a difference between categories because of the **different counts**
- proportion: best if you are interested in the **rate** within each category. Not concerned with counts.
- side-by-side: best if you want to see differences between categories but still want to see the count discrepancies between the main category
:::

::: slide-deck
### Example 2: Barplots {.scrollable .smaller}

What if we want to visualize the distribution of `sex` in each of the `species`. There are 4 main ways to visualize multiple levels within a categorical data:

```{r cat-barplot}
#| echo: true
#| out.width: 50%
ggplot(data=penguins, aes(x = species, fill = sex)) +
  geom_bar()
  
```

```{r proportion-barplot}
#| echo: true
#| out.width: 50%
ggplot(data=penguins, aes(x = species, fill = sex)) +
  geom_bar(position = "fill") +
  ylab("proportion")
  
```

```{r side-by-side-barplot}
#| echo: true
#| out.width: 50%
ggplot(data=penguins, aes(x = species, fill = sex)) +
  geom_bar(position = "dodge")
 
```

```{r faceted-barplot}
#| echo: true
#| out.width: 50%
ggplot(data=penguins, aes(x = species))+
  geom_bar() +
  facet_wrap(~ sex)
```
:::

::: slide-deck
### Extra information and resources {.scrollable}

**"factor" vs "character" variable**

-   factor has predefined levels and the observation must be one of those levels (limited response options).
-   character can take on any string value (think open response options)
-   [Factors in R](https://www.stat.berkeley.edu/~s133/factors.html)
:::


## Activity Solution

Need to add. See RStudio Cloud TA Solutions for now.

## Homework

::: agenda
-   Complete and submit Activity 04

-   Read Sections 3.0 - 3.3 of the book

-   Complete and submit Reading Check 05_wrangling1
:::